apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
spec:
  clusterIP: None
  ports:
  - name: epmd
    port: 4369
  - name: amqp
    port: 5672
  - name: amqps
    port: 5671
  - name: dist
    port: 25672
  - name: http
    port: 15672
  - name: https
    port: 15671
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq-headless
  podManagementPolicy: OrderedReady # should be OrderedReady
  replicas: 3
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 8Gi
  template:
    metadata:
      annotations:
        logflow.io/parser: |-
          format=/^(?P<timestamp>\S* \S*?) \[(?P<level>[^\]]*)\] (?P<pid><[^>]*>) (?P<message>.*)$/
          message_key=message
          timestamp_key=timestamp
          timestamp_layout=2006-01-02 15:04:05.999
          multiline_start=/^\d\d\d\d-\d\d-\d\d /
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 999
        runAsUser: 999
      volumes:
      - name: config
        configMap:
          name: rabbitmq
      - name: auth
        configMap:
          name: rabbitmq-auth
          optional: true
      - name: tls
        secret:
          secretName: rabbitmq-tls
          optional: true
      - name: tls-config
        configMap:
          name: rabbitmq-tls
          optional: true
      containers:
      - name: rabbitmq
        image: rabbitmq:3.8.3
        ports:
        - name: epmd
          containerPort: 4369
        - name: amqp
          containerPort: 5672
        - name: amqps
          containerPort: 5671
        - name: dist
          containerPort: 25672
        - name: http
          containerPort: 15672
        - name: https
          containerPort: 15671
        env:
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        envFrom:
        - secretRef:
            name: rabbitmq
        - secretRef:
            name: rabbitmq-auth
            optional: true
        command:
        - bash
        - -ce
        - |
          cp /tmp/config/* /etc/rabbitmq
          if [ -f /tmp/auth/rabbitmq.conf ]; then
              echo >> /etc/rabbitmq/rabbitmq.conf
              cat /tmp/auth/rabbitmq.conf >> /etc/rabbitmq/rabbitmq.conf
          fi
          if [ -f /tmp/tls/rabbitmq.conf ]; then
              echo >> /etc/rabbitmq/rabbitmq.conf
              cat /tmp/tls/rabbitmq.conf >> /etc/rabbitmq/rabbitmq.conf
          fi
          sed -i -e "s/\${default_user}/${default_user}/g" \
                 -e "s/\${default_pass}/${default_pass}/g" \
                 /etc/rabbitmq/rabbitmq.conf
          printenv erlang_cookie > /var/lib/rabbitmq/.erlang.cookie
          chmod 600 /var/lib/rabbitmq/.erlang.cookie
          export RABBITMQ_NODENAME=rabbit@$(hostname -f)
          export K8S_SERVICE_NAME=$(hostname -f | cut -d. -f2)
          export K8S_HOSTNAME_SUFFIX=.$(hostname -d)
          exec "$@"
        - --
        args:
        - rabbitmq-server
        volumeMounts:
        - name: config
          mountPath: /tmp/config
        - name: auth
          mountPath: /tmp/auth
        - name: tls
          mountPath: /tls
        - name: tls-config
          mountPath: /tmp/tls
        - name: datadir
          mountPath: /var/lib/rabbitmq
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
          exec:
            command: [rabbitmq-diagnostics, -q, status]
        livenessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 20
          periodSeconds: 30
          exec:
            command: [rabbitmq-diagnostics, -q, status]
