apiVersion: v1
kind: Service
metadata:
  name: cassandra
spec:
  clusterIP: None
  ports:
  - name: intra
    port: 7000
  - name: tls
    port: 7001
  - name: jmx
    port: 7199
  - name: cql
    port: 9042
  - name: thrift
    port: 9160
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
spec:
  serviceName: cassandra
  replicas: 3
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 10Gi
  template:
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      volumes:
      - name: config
        configMap:
          name: cassandra
      - name: tls
        secret:
          secretName: cassandra-tls
          optional: true
          items:
          - key: keystore
            path: keystore
          - key: truststore
            path: truststore
          - key: cert.pem
            path: cert.pem
      containers:
      - name: cassandra
        image: cassandra:3.11.6
        envFrom:
        - secretRef:
            name: cassandra-auth
            optional: true
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cassandra-tls
              key: KEYSTORE_PASSWORD
              optional: true
        - name: TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cassandra-tls
              key: TRUSTSTORE_PASSWORD
              optional: true
        - name: INTERNODE_ENCRYPTION
          valueFrom:
            secretKeyRef:
              name: cassandra-tls
              key: INTERNODE_ENCRYPTION
              optional: true
        - name: CLIENT_ENCRYPTION
          valueFrom:
            secretKeyRef:
              name: cassandra-tls
              key: CLIENT_ENCRYPTION
              optional: true
        - name: REPLICAS
          value: "3"
        - name: MAX_HEAP_SIZE
          value: 2048M
        - name: HEAP_NEWSIZE
          value: 512M
        - name: START_RPC
          value: "true"
        - name: RPC_ADDRESS
          value: 0.0.0.0
        - name: SSL_CERTFILE
          value: /etc/cassandra/cert.pem
        ports:
        - name: intra
          containerPort: 7000
        - name: tls
          containerPort: 7001
        - name: jmx
          containerPort: 7199
        - name: cql
          containerPort: 9042
        - name: thrift
          containerPort: 9160
        volumeMounts:
        - name: config
          mountPath: /tmp/config
        - name: tls
          mountPath: /tmp/tls
        - name: data
          mountPath: /var/lib/cassandra
        command:
        - bash
        - -ce
        - |
          cp /tmp/config/* /etc/cassandra
          if [ -f /tmp/tls/keystore ]; then
              cp /tmp/tls/keystore /etc/cassandra/.keystore
              cp /tmp/tls/truststore /etc/cassandra/.truststore
              cp /tmp/tls/cert.pem /etc/cassandra
          fi
          HOST=$(hostname -s)
          DOMAIN=$(hostname -d)
          if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
              NAME=${BASH_REMATCH[1]}
          else
              echo "Failed to parse hostname $HOST"
              exit 1
          fi
          declare -a seeds
          for i in $(seq 0 $((REPLICAS-1))); do
             seeds+=($NAME-$i.$DOMAIN)
          done
          SEEDS=$(IFS=, ; echo "${seeds[*]}")
          if [ -n "$CASSANDRA_PASSWORD" ]; then
              AUTHENTICATOR=PasswordAuthenticator
              AUTHORIZER=CassandraAuthorizer
          else
              AUTHENTICATOR=AllowAllAuthenticator
              AUTHORIZER=AllowAllAuthorizer
          fi
          sed -i -e "s/\${STATEFULSET_NAME}/${NAME}/g" \
                 -e "s/\${POD_IP}/${POD_IP}/g" \
                 -e "s/\${NUM_TOKENS}/${NUM_TOKENS:-256}/g" \
                 -e "s/\${SEEDS}/${SEEDS}/g" \
                 -e "s/\${ENDPOINT_SNITCH}/${ENDPOINT_SNITCH:-SimpleSnitch}/g" \
                 -e "s/\${START_RPC}/${START_RPC:-false}/g" \
                 -e "s/\${RPC_ADDRESS}/${RPC_ADDRESS:-localhost}/g" \
                 -e "s/\${AUTHENTICATOR}/${AUTHENTICATOR}/g" \
                 -e "s/\${AUTHORIZER}/${AUTHORIZER}/g" \
                 -e "s/\${INTERNODE_ENCRYPTION}/${INTERNODE_ENCRYPTION:-none}/g" \
                 -e "s/\${CLIENT_ENCRYPTION}/${CLIENT_ENCRYPTION:-false}/g" \
                 -e "s/\${TRUSTSTORE_PASSWORD}/${TRUSTSTORE_PASSWORD:-cassandra}/g" \
                 -e "s/\${KEYSTORE_PASSWORD}/${KEYSTORE_PASSWORD:-cassandra}/g" \
                 /etc/cassandra/cassandra.yaml
          sed -i -e "s/\${DATACENTER}/${DATACENTER:-dc1}/g" \
                 -e "s/\${RACK}/${RACK:-rack1}/g" \
                 /etc/cassandra/cassandra-rackdc.properties
          cd $CASSANDRA_HOME
          exec "$@"
        - --
        args:
        - cassandra
        - -f
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 5
          exec:
            command:
            - nodetool
            - status
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          exec:
            command:
            - bash
            - -ce
            - nodetool status | grep -E "^UN\\s+${POD_IP}"
