apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-server
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus-server
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "nodes/metrics", "services", "endpoints", "pods", "ingresses", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses/status", "ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus-server
subjects:
- kind: ServiceAccount
  name: prometheus-server
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-server
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
spec:
  ports:
  - name: http
    port: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server-headless
  labels:
    comp: server
spec:
  clusterIP: None
  ports:
  - name: http
    port: 9090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-server
spec:
  serviceName: prometheus-server-headless
  replicas: 1
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 8Gi
  template:
    spec:
      terminationGracePeriodSeconds: 300
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      serviceAccountName: prometheus-server
      volumes:
      - name: config
        configMap:
          name: prometheus-server
      containers:
      - name: server
        image: prom/prometheus:v2.18.0
        ports:
        - name: http
          containerPort: 9090
        args:
        - --config.file=/etc/prometheus/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --storage.tsdb.retention.time=15d
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus/config
        - name: datadir
          mountPath: /data
        readinessProbe:
          initialDelaySeconds: 30
          timeoutSeconds: 30
          httpGet:
            path: /-/ready
            port: 9090
        livenessProbe:
          initialDelaySeconds: 30
          timeoutSeconds: 30
          httpGet:
            path: /-/healthy
            port: 9090
