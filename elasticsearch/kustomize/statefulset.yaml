apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: elasticsearch
spec:
  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
  serviceName: elasticsearch-headless
  replicas: 3
  podManagementPolicy: Parallel
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 1Gi
  template:
    spec:
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels: {}
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: tls
        secret:
          secretName: elasticsearch-tls
          optional: true
      initContainers:
      - name: sysctl
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        command: [ "sysctl", "-w", "vm.max_map_count=262144" ]
        securityContext:
          runAsUser: 0
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        envFrom:
        - secretRef:
            name: elasticsearch-auth
            optional: true
        - configMapRef:
            name: elasticsearch-auth
            optional: true
        - configMapRef:
            name: elasticsearch-tls
            optional: true
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.name
          value: elasticsearch
        - name: cluster.initial_master_nodes
          value: elasticsearch-0,elasticsearch-1,elasticsearch-2 # update based on replicas
        - name: discovery.seed_hosts
          value: elasticsearch-headless
        - name: ES_JAVA_OPTS
          value: -Xmx1g -Xms1g
        volumeMounts:
        - name: tls
          mountPath: /usr/share/elasticsearch/config/tls
        - name: datadir
          mountPath: /usr/share/elasticsearch/data
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
        readinessProbe:
          initialDelaySeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
            - bash
            - -ce
            - |
              if [ -n "${ELASTIC_PASSWORD}" ]; then
                  auth="-u elastic:${ELASTIC_PASSWORD}"
              fi
              if [ "$(printenv xpack.security.http.ssl.enabled)" = "true" ]; then
                  protocol=https
              else
                  protocol=http
              fi
              start_file=/tmp/.elasticsearch_start_file
              if [ -f "${START_FILE}" ]; then
                  echo checking api...
                  curl -sSkf ${auth} -o /dev/null -w '%{http_code}' $protocol://127.0.0.1:9200/
              else
                  echo waiting for green status...
                  curl -sSkf ${auth} "$protocol://127.0.0.1:9200/_cluster/health?wait_for_status=green&timeout=1s"
                  touch ${start_file}
              fi
