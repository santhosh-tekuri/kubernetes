apiVersion: v1
kind: Service
metadata:
  name: zk-headless
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
  - name: peer
    port: 2888
  - name: election
    port: 3888
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk
spec:
  selector:
    matchLabels: {}
  minAvailable: 2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  serviceName: zk-headless
  replicas: 3
  podManagementPolicy: Parallel
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7000"
    spec:
      terminationGracePeriodSeconds: 180
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels: {}
            topologyKey: kubernetes.io/hostname
      volumes:
      - name: config
        configMap:
          name: zk
      containers:
      - name: zk
        image: zookeeper:3.6.1
        ports:
        - name: peer
          containerPort: 2888
        - name: election
          containerPort: 3888
        - name: client
          containerPort: 2181
        - name: metrics
          containerPort: 7000
        env:
        - name: REPLICAS
          value: "3" # should match Statefulset.spec.replicas
        - name: ZOOCFGDIR
          value: /data/conf
        - name: ZK_SERVER_HEAP
          value: "1024" # jvm heapsize in mb
        command:
        - bash
        - -c
        - |
          set -ex
          HOST=$(hostname -s)
          DOMAIN=$(hostname -d)
          if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
              NAME=${BASH_REMATCH[1]}
              ORD=${BASH_REMATCH[2]}
          else
              echo "Failed to parse hostname $HOST"
              exit 1
          fi
          mkdir -p /data/conf
          cp /configtmp/* /data/conf
          if [ ! -f /data/conf/zoo.cfg.dynamic ]; then
              {
                  for i in $(seq 1 $REPLICAS); do
                      echo "server.$i=$NAME-$((i-1)).$DOMAIN:2888:3888;2181"
                  done
              } > /data/conf/zoo.cfg.dynamic
          fi
          mkdir -p /data/db
          echo $((ORD+1)) > /data/db/myid
          exec "$@"
        - --
        args:
        - zkServer.sh
        - start-foreground
        volumeMounts:
        - name: config
          mountPath: /configtmp
        - name: datadir
          mountPath: /data
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 5
          exec:
            command:
            - bash
            - -c
            - |
              set -e
              resp=$(echo ruok | nc 127.0.0.1 2181)
              test "$resp" == "imok"
